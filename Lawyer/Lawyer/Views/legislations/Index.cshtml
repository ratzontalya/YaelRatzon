@model IEnumerable<BE.legislation>
@using BE
@{
    Layout = "~/Views/Shared/DictionaryLayout.cshtml";
}
@{
    int counterLetters = 1;
    int counterQuestions = 1;
    foreach (var letter in Enum.GetValues(typeof(Enums.AlphaAndBeta)))
    {
        <div id="text_@counterLetters" hidden="hidden">
            @foreach (var item in Model.Where(q => q.Title[0].ToString() == letter.ToString()).ToList())
            {
                <div id="@counterLetters @counterQuestions">
                    <br />
                    <br />
                    <br />
                    <h2 class="text-gold">@item.Title</h2>
                    <hr />
                    <p class="ml-5">@item.Data</p>
                </div>
                counterQuestions++;
            }
        </div>
        counterQuestions = 1;
        counterLetters++;
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
</body>
</html>
